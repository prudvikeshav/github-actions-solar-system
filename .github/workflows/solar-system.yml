name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container: 
           image: 'node:20'
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

       
        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'

    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test

          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    code-coverage:
          runs-on: ubuntu-latest
          steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v3
              with:
                node-version: 18
            - run: npm install
            - continue-on-error: true
              run: npm run coverage
            - uses: actions/upload-artifact@v3
              with:
                name: Code-Coverage-Result
                path: coverage
                retention-days: 5
              
    docker:
      permissions: #added
        packages: write #added
      runs-on: ubuntu-latest
      needs:
        - code-coverage
        - unit-testing
      steps:
      - uses: actions/checkout@v4
        name: Login to GitHub Container Registry
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ vars.USERNAME }}
          password: ${{ secrets.TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: 'ghcr.io/${{ vars.USERNAME }}/solar-system:${{ github.sha }}'

    dev-deploy:
      runs-on: ubuntu-latest
      needs: docker
      environment:
        name: development
      steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-kubectl@v4
        with:
          version: 'v1.26.0' # default is latest stable
        id: install
      - uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: '${{ secrets.KUBECONFIG }}'
     
      - run: >
          echo "INGRESS_IP=$(kubectl -n ingress-nginx get services
          ingress-nginx-controller -o
          jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV
      - uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: '["kubernetes/development/*.yaml"]'
        env:
          NAMESPACE: '${{ vars.NAMESPACE }}'
          REPLICAS: '${{ vars.REPLICAS }}'
          IMAGE: >-
            ghcr.io/${{ vars.USERNAME }}/solar-system:${{ github.sha }}
            }}
          INGRESS_IP: '${{ env.INGRESS_IP }}'
      - run: cat kubernetes/development/*.yaml

    integration-test:
    needs: dev-deploy
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      ingress-url: ${{ needs.dev-deploy.outputs.APP_INGRESS_URL }